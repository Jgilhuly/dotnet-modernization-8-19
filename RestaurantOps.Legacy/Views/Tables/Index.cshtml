@model IEnumerable<RestaurantOps.Legacy.Models.RestaurantTable>

@{
    ViewData["Title"] = "Tables";
}

@await Html.PartialAsync("Components/_PageHeader", new {
    Title = "Floor Plan",
    Description = "Monitor and manage table availability in real-time",
    Actions = @$"<div class=""flex items-center space-x-4"">
                    <div class=""flex items-center space-x-2"">
                        <div class=""w-3 h-3 bg-green-500 rounded-full animate-pulse""></div>
                        <span class=""status-badge status-badge-success"">Available: {Model.Count(t => !t.IsOccupied)}</span>
                    </div>
                    <div class=""flex items-center space-x-2"">
                        <div class=""w-3 h-3 bg-red-500 rounded-full animate-pulse""></div>
                        <span class=""status-badge status-badge-danger"">Occupied: {Model.Count(t => t.IsOccupied)}</span>
                    </div>
                 </div>"
})

<div class="table-container">
    <table class="table" data-enhanced>
        <thead>
            <tr>
                <th data-sortable>Table</th>
                <th>Seats</th>
                <th>Status</th>
                <th class="text-right">Actions</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var tbl in Model.OrderBy(t => t.Name))
        {
            <tr class="@(tbl.IsOccupied ? "bg-red-50" : "bg-green-50")">
                <td>
                    <div class="font-semibold text-gray-900">@tbl.Name</div>
                </td>
                <td>
                    <div class="flex items-center text-gray-600">
                        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3Zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z"/>
                        </svg>
                        @tbl.Seats
                    </div>
                </td>
                <td>
                    @if (tbl.IsOccupied)
                    {
                        <div class="flex items-center space-x-2">
                            <div class="w-2 h-2 bg-red-500 rounded-full animate-pulse"></div>
                            @await Html.PartialAsync("Components/_StatusBadge", new { Type = "danger", Text = "Occupied" })
                        </div>
                    }
                    else
                    {
                        <div class="flex items-center space-x-2">
                            <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                            @await Html.PartialAsync("Components/_StatusBadge", new { Type = "success", Text = "Available" })
                        </div>
                    }
                </td>
                <td class="text-right">
                    @if (!tbl.IsOccupied)
                    {
                        <a asp-action="Seat" asp-route-id="@tbl.TableId" class="btn-primary text-sm">
                            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
                                <path fill-rule="evenodd" d="M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z"/>
                            </svg>
                            Seat Guests
                        </a>
                    }
                    else
                    {
                        <a asp-action="Seat" asp-route-id="@tbl.TableId" class="btn-outline text-sm">
                            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M1.92.506a.5.5 0 0 1 .434.14L3 1.293l.646-.647a.5.5 0 0 1 .708 0L5 1.293l.646-.647a.5.5 0 0 1 .708 0L7 1.293l.646-.647a.5.5 0 0 1 .708 0L9 1.293l.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .801.13l.5 1A.5.5 0 0 1 15 2v12a.5.5 0 0 1-.053.224l-.5 1a.5.5 0 0 1-.8.13L13 14.707l-.646.647a.5.5 0 0 1-.708 0L11 14.707l-.646.647a.5.5 0 0 1-.708 0L9 14.707l-.646.647a.5.5 0 0 1-.708 0L7 14.707l-.646.647a.5.5 0 0 1-.708 0L5 14.707l-.646.647a.5.5 0 0 1-.708 0L3 14.707l-.646.647a.5.5 0 0 1-.801-.13l-.5-1A.5.5 0 0 1 1 14V2a.5.5 0 0 1 .053-.224l.5-1a.5.5 0 0 1 .367-.27zm.217 1.338L2 2.118v11.764l.137.274.51-.51a.5.5 0 0 1 .707 0l.646.647.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.509.509.137-.274V2.118l-.137-.274-.51.51a.5.5 0 0 1-.707 0L12 1.707l-.646.647a.5.5 0 0 1-.708 0L10 1.707l-.646.647a.5.5 0 0 1-.708 0L8 1.707l-.646.647a.5.5 0 0 1-.708 0L6 1.707l-.646.647a.5.5 0 0 1-.708 0L4 1.707l-.646.647a.5.5 0 0 1-.708 0l-.509-.51z"/>
                                <path d="M3 4.5a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm8-6a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5z"/>
                            </svg>
                            View Order
                        </a>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
</div> 